{"version":3,"names":["unMask","value","type","unMaskedValue","replace","number","parseInt","trimStart","toString","masker","pattern","options","autoCapitalize","sentence","toPattern","toUpperCase","text","lower","toLowerCase","charAt","substring","currencyMasker","prefix","decimalSeparator","groupSeparator","precision","groupSize","secondaryGroupSize","fractionGroupSeparator","fractionGroupSize","suffix","precisionDivider","repeat","formatter","bigNumber","BigNumber","config","FORMAT","toFormat","dateMasker","dateFormat","regex","replaceAll","timeMasker","timeFormat","multimasker","patterns","reduce","memo","length","mask","String"],"sources":["mask.ts"],"sourcesContent":["/* eslint-disable no-confusing-arrow */\nimport { BigNumber } from 'bignumber.js'\nimport type { AutoCapitalizeOptions } from 'src/@types/AutoCapitalizeOptions'\nimport type { FormatType } from '../@types/FormatType'\nimport toPattern from './toPattern'\n\n/**\n * function unMask(\n * @param {string} value\n * @param {'custom' | 'currency'} type\n * @returns {string}\n */\nfunction unMask(value: string, type: 'custom' | 'currency' = 'custom') {\n  if (type === 'currency') {\n    if (!value) return '0'\n\n    const unMaskedValue = value.replace(/\\D/g, '')\n    const number = parseInt(unMaskedValue.trimStart())\n\n    return number.toString()\n  }\n\n  return value.replace(/\\W/g, '')\n}\n\n/**\n * function masker(\n * @param {string} value\n * @param {string} patterns\n * @param {any} options\n * @returns {string}\n */\nfunction masker(value: string, pattern: string, options: any) {\n  const { autoCapitalize } = options\n\n  const sentence = toPattern(value, { pattern, ...options })\n\n  switch (autoCapitalize) {\n    case 'characters':\n      sentence.toUpperCase()\n      break\n    case 'words':\n      sentence.replace(/(?:^|\\s)\\S/g, (text) => text.toUpperCase())\n      break\n    case 'sentences':{\n      const lower = sentence.toLowerCase()\n      lower.charAt(0).toUpperCase() + lower.substring(1)\n      break\n    }\n  }\n\n  return sentence\n}\n\n/**\n * function masker(\n * @param {string} value\n * @param {any} options\n * @returns {string}\n */\nfunction currencyMasker(value = '0', options: any) {\n  const {\n    prefix,\n    decimalSeparator,\n    groupSeparator,\n    precision,\n    groupSize,\n    secondaryGroupSize,\n    fractionGroupSeparator,\n    fractionGroupSize,\n    suffix,\n  } = options\n\n  const precisionDivider = parseInt(1 + '0'.repeat(precision || 0))\n  const number = parseInt(value) / precisionDivider\n\n  const formatter = {\n    prefix,\n    decimalSeparator,\n    groupSeparator,\n    groupSize: groupSize || 3,\n    secondaryGroupSize,\n    fractionGroupSeparator,\n    fractionGroupSize,\n    suffix,\n  }\n\n  const bigNumber = new BigNumber(number)\n\n  BigNumber.config({ FORMAT: formatter })\n\n  return bigNumber.toFormat(precision)\n}\n\nfunction dateMasker(value = '', options: any) {\n  const { dateFormat = 'yyyy/mm/dd' } = options\n\n  const regex = /[a-zA-Z]/gi\n  const pattern = dateFormat.replaceAll(regex, '9')\n  return masker(value, pattern, {})\n}\n\nfunction timeMasker(value = '', options: any) {\n  const { timeFormat = 'HH:mm:ss' } = options\n\n  const pattern = timeFormat\n  return masker(value, pattern, {})\n}\n\n/**\n * function multimasker(\n * @param {string} value\n * @param {string[]} patterns\n * @param {any} options\n * @returns {string}\n */\nfunction multimasker(value: string, patterns: string[], options: any) {\n  return masker(\n    value,\n    patterns.reduce(\n      (memo: string, pattern: string) =>\n        value.length <= unMask(memo).length ? memo : pattern,\n      patterns[0]\n    ),\n    options\n  )\n}\n\nfunction mask(\n  value: string | number,\n  pattern: string | string[] = '',\n  type: FormatType = 'custom',\n  options?: any,\n  autoCapitalize?: AutoCapitalizeOptions\n): string {\n  if (type === 'currency') {\n    return currencyMasker(String(value), options)\n  }\n\n  if (type === 'date') {\n    return dateMasker(String(value), options)\n  }\n\n  if (type === 'time') {\n    return timeMasker(String(value), options)\n  }\n\n  if (typeof pattern === 'string') {\n    return masker(String(value), pattern || '', {\n      autoCapitalize: autoCapitalize,\n    })\n  }\n\n  return multimasker(String(value), pattern, {})\n}\n\nexport { mask, unMask }\n"],"mappings":"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"}