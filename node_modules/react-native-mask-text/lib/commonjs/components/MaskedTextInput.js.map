{"version":3,"names":["MaskedTextInputComponent","ref","mask","pattern","type","options","defaultValue","onChangeText","value","inputAccessoryView","autoCapitalize","textBold","textItalic","textDecoration","style","rest","styleSheet","fontWeight","fontStyle","textDecorationLine","getMaskedValue","getUnMaskedValue","unMask","defaultValueCustom","defaultValueCurrency","initialRawValue","initialMaskedValue","initialUnMaskedValue","maskedValue","setMaskedValue","useState","unMaskedValue","setUnmaskedValue","rawValue","setRawValue","actualValue","onChange","newUnMaskedValue","newMaskedValue","useEffect","length","undefined","MaskedTextInput","forwardRef"],"sources":["MaskedTextInput.tsx"],"sourcesContent":["import React, {\n  useEffect,\n  useState,\n  forwardRef,\n  ForwardRefRenderFunction,\n} from 'react'\nimport { TextInput, TextInputProps } from 'react-native'\nimport { mask, unMask } from '../utils/mask'\nimport type { FormatType, MaskOptions, StyleObj, TextDecorationOptions } from 'src/@types'\n\n\ntype TIProps = Omit<TextInputProps, 'onChangeText'>\nexport interface MaskedTextInputProps extends TIProps {\n  mask?: string\n  type?: FormatType\n  options?: MaskOptions\n  defaultValue?: string\n  onChangeText: (text: string, rawText: string) => void\n  inputAccessoryView?: JSX.Element\n  autoCapitalize?: 'characters' | 'words' | 'sentences' | 'none'\n  textBold?: boolean\n  textItalic?:boolean\n  textDecoration?:TextDecorationOptions\n  style?: StyleObj\n}\n\nexport const MaskedTextInputComponent: ForwardRefRenderFunction<\n  TextInput,\n  MaskedTextInputProps\n> = (\n  {\n    mask: pattern = '',\n    type = 'custom',\n    options = {} as MaskOptions,\n    defaultValue,\n    onChangeText,\n    value,\n    inputAccessoryView,\n    autoCapitalize = 'sentences',\n    textBold,\n    textItalic,\n    textDecoration,\n    style,\n    ...rest\n  },\n  ref\n): JSX.Element => {\n  const styleSheet = {\n    ...(typeof style === 'object' ? style : {}),\n    fontWeight:textBold && 'bold',\n    fontStyle: textItalic && 'italic',\n    textDecorationLine: textDecoration\n  }\n  const getMaskedValue = (value: string) =>\n    mask(value, pattern, type, options, autoCapitalize)\n  const getUnMaskedValue = (value: string) =>\n    unMask(value, type as 'custom' | 'currency')\n\n  const defaultValueCustom = defaultValue || ''\n  const defaultValueCurrency = defaultValue || '0'\n\n  const initialRawValue = value;\n\n  const initialMaskedValue = getMaskedValue(\n    type === 'currency' ? defaultValueCurrency : defaultValueCustom\n  )\n\n  const initialUnMaskedValue = getUnMaskedValue(\n    type === 'currency' ? defaultValueCurrency : defaultValueCustom\n  )\n\n  const [maskedValue, setMaskedValue] = useState(initialMaskedValue)\n  const [unMaskedValue, setUnmaskedValue] = useState(initialUnMaskedValue)\n  const [rawValue, setRawValue] = useState(initialRawValue);\n  const actualValue = pattern || type === \"currency\" ? maskedValue : rawValue;\n\n  function onChange(value: string) {\n    const newUnMaskedValue = unMask(value, type as 'custom' | 'currency')\n    const newMaskedValue = mask(newUnMaskedValue, pattern, type, options)\n\n    setMaskedValue(newMaskedValue)\n    setUnmaskedValue(newUnMaskedValue)\n    setRawValue(value);\n  }\n\n  useEffect(() => {\n    onChangeText(maskedValue, unMaskedValue)\n  }, [maskedValue, unMaskedValue])\n\n  useEffect(() => {\n    if (value) {\n      setMaskedValue(getMaskedValue(value))\n      setUnmaskedValue(getUnMaskedValue(value))\n    } else {\n      setMaskedValue(initialMaskedValue)\n      setUnmaskedValue(initialUnMaskedValue)\n    }\n  }, [value])\n\n  return (\n    <>\n      <TextInput\n        onChangeText={(value) => onChange(value)}\n        ref={ref}\n        maxLength={pattern.length || undefined}\n        {...rest}\n        value={actualValue}\n        style={{...styleSheet} as StyleObj}\n      />\n      {inputAccessoryView}\n    </>\n  )\n}\n\nexport const MaskedTextInput = forwardRef(MaskedTextInputComponent)\n"],"mappings":"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"}