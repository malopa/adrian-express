{"version":3,"names":["describe","mockedOnChangeText","jest","fn","test","container","render","expect","toMatchSnapshot","getByDisplayValue","toBeTruthy","prefix","decimalSeparator","groupSeparator","precision","fireEvent","changeText","getByTestId","waitFor","Keyboard","dismiss","tree","toJSON","props","inputAccessoryViewID","toBe","nativeID","toHaveStyle","fontWeight","fontStyle","textDecorationLine"],"sources":["MaskedTextInput.test.tsx"],"sourcesContent":["import React from 'react'\nimport { render, fireEvent, waitFor } from '@testing-library/react-native';\nimport { MaskedTextInput } from './MaskedTextInput';\nimport { Button, Keyboard, InputAccessoryView } from 'react-native';\n\n\ndescribe('<MaskedTextInput />', () => {\n  const mockedOnChangeText = jest.fn();\n\n  test('should render correctly without a mask', () => {\n    const container = render(\n      <MaskedTextInput value=\"with space and special* characters;\" onChangeText={mockedOnChangeText} />,\n    );\n    expect(container).toMatchSnapshot();\n  })\n\n  test('should renders correctly with custom mask', () => {\n    const container = render(\n      <MaskedTextInput mask=\"AAA-999\" onChangeText={mockedOnChangeText} />,\n    );\n    expect(container).toMatchSnapshot();\n  });\n\n  test('should renders correctly with custom mask default value', () => {\n    const container = render(\n      <MaskedTextInput\n        mask=\"AAA-999\"\n        onChangeText={mockedOnChangeText}\n        defaultValue=\"ABC-123\"\n      />\n    );\n    expect(container.getByDisplayValue('ABC-123')).toBeTruthy()\n  });\n\n  test('should renders correctly with currency mask', () => {\n    const container = render(\n      <MaskedTextInput\n        type=\"currency\"\n        options={{\n          prefix: '$',\n          decimalSeparator: '.',\n          groupSeparator: ',',\n          precision: 2,\n        }}\n        onChangeText={mockedOnChangeText}\n      />\n    );\n    expect(container).toMatchSnapshot();\n  });\n\n  test('should mask input text with custom mask', async () => {\n    const container = render(\n      <MaskedTextInput\n        mask=\"AAA-999\"\n        onChangeText={mockedOnChangeText}\n        testID=\"masked-text-input\"\n      />\n    );\n\n    fireEvent.changeText(container.getByTestId('masked-text-input'), 'RCT777')\n\n    await waitFor(() => {\n      expect(container.getByDisplayValue('RCT-777')).toBeTruthy()\n    })\n  });\n\n  test('should mask input text with currency mask', async () => {\n    const container = render(\n      <MaskedTextInput\n        type=\"currency\"\n        options={{\n          prefix: '$',\n          decimalSeparator: '.',\n          groupSeparator: ',',\n          precision: 2,\n        }}\n        onChangeText={mockedOnChangeText}\n        testID=\"masked-text-input\"\n      />\n    );\n\n    fireEvent.changeText(container.getByTestId('masked-text-input'), '5999')\n\n    await waitFor(() => {\n      expect(container.getByDisplayValue('$59.99')).toBeTruthy()\n    })\n  });\n\n  test('should renders correctly with an accessory view', () => {\n    const container = render(\n      <MaskedTextInput         \n      type=\"currency\"\n      options={{\n        prefix: '$',\n        decimalSeparator: '.',\n        groupSeparator: ',',\n        precision: 2,\n      }} \n      onChangeText={mockedOnChangeText} \n      inputAccessoryViewID='Done'\n      inputAccessoryView={\n        <InputAccessoryView nativeID='Done'>\n        <Button\n          onPress={() => Keyboard.dismiss()}\n          title=\"Clear text\"\n        />\n        </InputAccessoryView>\n      }\n      />,\n    );\n\n    const tree = container.toJSON();\n    expect(tree[0].props.inputAccessoryViewID).toBe('Done');\n    expect(tree[1].props.nativeID).toBe('Done');\n  });\n  test('should be bold when the textBold attribute is added', () => {\n    const container  =\n    render(<MaskedTextInput \n      testID=\"masked-text-input\" \n      onChangeText={mockedOnChangeText} \n      textBold \n      mask=\"99/99/9999\"\n      />)\n      expect(container.getByTestId('masked-text-input')).toHaveStyle({fontWeight: 'bold' });\n    });\n    test('should be italic when the textItalic attribute is added', () => {\n      const container  =\n      render(<MaskedTextInput \n        testID=\"masked-text-input\" \n        onChangeText={mockedOnChangeText} \n        textItalic \n        mask=\"99/99/9999\"\n        />)\n        expect(container.getByTestId('masked-text-input')).toHaveStyle({fontStyle: 'italic' });\n    });\n    test('should be the line style added to the text when the textDecoration attribute has a non-null value', () => {\n      const textDecorationLine = 'underline'\n      const container  =\n      render(<MaskedTextInput\n        testID=\"masked-text-input\" \n        onChangeText={mockedOnChangeText} \n        textDecoration={textDecorationLine} \n        mask=\"99/99/9999\"\n        />)\n        expect(container.getByTestId('masked-text-input')).toHaveStyle({textDecorationLine: textDecorationLine });\n    });  \n});\n"],"mappings":"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"}