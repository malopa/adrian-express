/// <reference types="react" />
import { FlatListProps, ListRenderItem as NativeListRenderItem } from 'react-native';
import { ValueOf } from 'type-fest';
export declare type ListRenderItem<ItemT> = NativeListRenderItem<ItemT>;
export declare type ItemLayoutFunc<ItemT> = ValueOf<FlatListProps<ItemT>, 'getItemLayout'>;
/**
 * Function that receive new data items and return mutated data items.
 */
export declare type OnLoadMoreFunc<ItemT> = ((moreData: ItemT[]) => (ItemT[] | void) | Promise<void | ItemT[]>) | null | undefined;
export interface LazyLoadFlatListProps<ItemT> extends FlatListProps<ItemT> {
    itemLimit: number;
    onLoadMore?: OnLoadMoreFunc<ItemT>;
}
declare type LazyLoadFlatListDefaultProps<ItemT> = Pick<LazyLoadFlatListProps<ItemT>, 'itemLimit' | 'onLoadMore'>;
declare const LazyLoadFlatList: {
    <ItemT = any>(props: LazyLoadFlatListProps<ItemT>): JSX.Element;
    defaultProps: LazyLoadFlatListDefaultProps<any>;
};
export default LazyLoadFlatList;
