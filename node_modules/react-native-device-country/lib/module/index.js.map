{"version":3,"sources":["index.tsx"],"names":["NativeModules","DeviceCountryModule","TYPE_ANY","TYPE_TELEPHONY","TYPE_CONFIGURATION","getCountryCode","type","Promise","resolve","reject","then","result","JSON","parse","catch","e"],"mappings":"AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,MAAM;AAAEC,EAAAA;AAAF,IAA0BD,aAAhC;AACA,OAAO,MAAME,QAAQ,GAAG,KAAjB;AACP,OAAO,MAAMC,cAAc,GAAG,WAAvB;AACP,OAAO,MAAMC,kBAAkB,GAAG,QAA3B;AAYP,OAAO,MAAMC,cAAc,GAAIC,IAAD,IAAkB;AAC9C,SAAO,IAAIC,OAAJ,CAAyB,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACnDR,IAAAA,mBAAmB,CAACI,cAApB,CAAmCC,IAAI,IAAIJ,QAA3C,EACGQ,IADH,CACSC,MAAD,IAA6B;AACjCH,MAAAA,OAAO,CAAC,OAAOG,MAAP,KAAkB,QAAlB,GAA6BA,MAA7B,GAAsCC,IAAI,CAACC,KAAL,CAAWF,MAAX,CAAvC,CAAP;AACD,KAHH,EAIGG,KAJH,CAIUC,CAAD,IAAY;AACjBN,MAAAA,MAAM,CAACM,CAAD,CAAN;AACD,KANH;AAOD,GARM,CAAP;AASD,CAVM;AAYP,eAAe;AACbV,EAAAA;AADa,CAAf","sourcesContent":["import { NativeModules } from 'react-native';\nconst { DeviceCountryModule } = NativeModules;\nexport const TYPE_ANY = 'any';\nexport const TYPE_TELEPHONY = 'telephony';\nexport const TYPE_CONFIGURATION = 'config';\n\nexport type Types =\n  | typeof TYPE_ANY\n  | typeof TYPE_TELEPHONY\n  | typeof TYPE_CONFIGURATION;\n\nexport interface ResolveType {\n  code: string;\n  type: string;\n}\n\nexport const getCountryCode = (type?: Types) => {\n  return new Promise<ResolveType>((resolve, reject) => {\n    DeviceCountryModule.getCountryCode(type || TYPE_ANY)\n      .then((result: Object | string) => {\n        resolve(typeof result === 'object' ? result : JSON.parse(result));\n      })\n      .catch((e: any) => {\n        reject(e);\n      });\n  });\n};\n\nexport default {\n  getCountryCode,\n};\n"]}